generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  FORMATEUR
  APPRENANT
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  role      Role     @default(APPRENANT)
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations avec noms explicites
  formationAssignments FormationAssignment[] @relation("UserAssignments")
  progressions         Progression[]         @relation("UserProgressions")

  @@map("User")
}

model Lead {
  id          String   @id @default(uuid())
  situation   String
  formations  String[]
  financement String
  nom         String
  telephone   String
  email       String
  formName    String?
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("Lead")
}

model Formation {
  id          String   @id @default(uuid())
  titre       String
  description String
  image       String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations avec noms explicites
  modules     Module[]              @relation("FormationModules")
  assignments FormationAssignment[] @relation("FormationAssignments")

  @@map("Formation")
}

model Module {
  id          String   @id @default(uuid())
  titre       String
  ordre       Int
  formationId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations avec noms explicites
  formation Formation @relation(fields: [formationId], references: [id], onDelete: Cascade, name: "FormationModules")
  titres    Titre[]   @relation("ModuleTitres")

  @@map("Module")
}

model Titre {
  id        String   @id @default(uuid())
  nom       String
  videoUrl  String
  ordre     Int
  moduleId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations avec noms explicites
  module       Module        @relation(fields: [moduleId], references: [id], onDelete: Cascade, name: "ModuleTitres")
  progressions Progression[] @relation("TitreProgressions")

  @@map("Titre")
}

model FormationAssignment {
  id          String   @id @default(uuid())
  userId      String
  formationId String
  titre       String?
  description String?
  image       String?
  assignedAt  DateTime @default(now())

  // Relations avec noms explicites
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserAssignments")
  formation Formation @relation(fields: [formationId], references: [id], onDelete: Cascade, name: "FormationAssignments")

  @@map("FormationAssignment")
}

model Progression {
  id          String    @id @default(uuid())
  userId      String
  titreId     String
  completed   Boolean   @default(false)
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations avec noms explicites
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserProgressions")
  titre Titre @relation(fields: [titreId], references: [id], onDelete: Cascade, name: "TitreProgressions")

  @@map("Progression")
}
